原子性是指一个操作是不可中断的. 即使是在多个线程一起执行的时候，一个操作一旦开始，就不会被其它线程干扰.
例如CPU中的一些指令, 属于原子性的。又或者变量直接赋值操作(i = 1), 也是原子性的, 即使有多个线程对i赋值, 相互也不会干扰。
而如i++, 则不是原子性的, 因为他实际上i = i + 1, 若存在多个线程操作i, 结果将不可预期。

有序性是指在单线程环境中, 程序是按序依次执行的。

可见性是指当一个线程修改了某一个共享变量的值，其他线程是否能够立即知道这个修改。会有多种场景影响到可见性。

volatile只保证了赋值操作的原子性，没保证程序执行的原子性，反例i++;